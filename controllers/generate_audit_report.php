<?php
require_once '../vendor/autoload.php'; // Load Composer's autoloader
require_once '../include/db_conn.php'; // Include database connection

// Retrieve search term from GET request
$searchQuery = $_GET['search'] ?? '';

// Fetch logged-in user's details
session_start();
$staffId = $_SESSION['admin_id'] ?? 'Unknown';
$firstName = $_SESSION['first_name'] ?? 'Unknown';
$lastName = $_SESSION['last_name'] ?? '';

// Get the current date and time
$printedDate = date("Y-m-d H:i:s");

// Fetch filtered audit logs
$query = "SELECT * FROM audit_log WHERE 1=1";
$params = [];

if (!empty($searchQuery)) {
    $query .= " AND (full_name LIKE :search OR action LIKE :search OR description LIKE :search)";
    $params[':search'] = "%$searchQuery%";
}

$query .= " ORDER BY created_at DESC"; // Order by most recent first

$stmt = $conn->prepare($query);
$stmt->execute($params);
$auditLogs = $stmt->fetchAll(PDO::FETCH_ASSOC);

// Include TCPDF
require_once '../vendor/tecnickcom/tcpdf/tcpdf.php';

// Create PDF instance in landscape mode with custom margins
$pdf = new TCPDF('L', 'mm', 'A4', true, 'UTF-8', false);
$pdf->SetCreator('Audit System');
$pdf->SetAuthor($firstName . ' ' . $lastName);
$pdf->SetTitle('Audit Logs Report');
$pdf->SetSubject('Audit Logs Report');

// Remove default header/footer
$pdf->setPrintHeader(false);
$pdf->setPrintFooter(false);

// Set margins
$pdf->SetMargins(15, 15, 15);
$pdf->SetAutoPageBreak(true, 15);

// Add a page
$pdf->AddPage();

// Add logo if available (comment out if not needed)
// $pdf->Image('../img/logo.png', 15, 15, 30, '', 'PNG', '', 'T', false, 300, '', false, false, 0, false, false, false);

// Set colors
$headerBgColor = [41, 128, 185]; // Blue
$headerTextColor = [255, 255, 255]; // White
$alternateRowColor = [245, 247, 250]; // Light gray
$borderColor = [189, 195, 199]; // Gray

// Header
$pdf->SetFont('helvetica', 'B', 20);
$pdf->SetTextColor(44, 62, 80); // Dark text
$pdf->Cell(0, 15, 'AUDIT LOGS REPORT', 0, 1, 'C');
$pdf->Ln(2);

// Report information section
$pdf->SetFont('helvetica', '', 10);
$pdf->SetTextColor(44, 62, 80);
$pdf->SetFillColor(248, 249, 250);
$pdf->SetDrawColor($borderColor[0], $borderColor[1], $borderColor[2]);

// Create a box for the report info
$pdf->SetLineWidth(0.2);
$pdf->RoundedRect(15, $pdf->GetY(), $pdf->GetPageWidth() - 30, 25, 2, '1111', 'DF', [], [248, 249, 250]);

$y = $pdf->GetY() + 5;
$pdf->SetXY(20, $y);
$pdf->SetFont('helvetica', 'B', 10);
$pdf->Cell(30, 5, 'Generated By:', 0, 0, 'L');
$pdf->SetFont('helvetica', '', 10);
$pdf->Cell(100, 5, "$firstName $lastName (ID: $staffId)", 0, 0, 'L');

$pdf->SetFont('helvetica', 'B', 10);
$pdf->Cell(30, 5, 'Date & Time:', 0, 0, 'L');
$pdf->SetFont('helvetica', '', 10);
$pdf->Cell(80, 5, $printedDate, 0, 1, 'L');

$y = $pdf->GetY() + 5;
$pdf->SetXY(20, $y);
$pdf->SetFont('helvetica', 'B', 10);
$pdf->Cell(30, 5, 'Search Filter:', 0, 0, 'L');
$pdf->SetFont('helvetica', '', 10);
$pdf->Cell(100, 5, ($searchQuery ? $searchQuery : 'None'), 0, 0, 'L');

$pdf->SetFont('helvetica', 'B', 10);
$pdf->Cell(30, 5, 'Total Records:', 0, 0, 'L');
$pdf->SetFont('helvetica', '', 10);
$pdf->Cell(80, 5, count($auditLogs), 0, 1, 'L');

$pdf->Ln(15);

// Table Headers
$pdf->SetFont('helvetica', 'B', 10);
$pdf->SetFillColor($headerBgColor[0], $headerBgColor[1], $headerBgColor[2]);
$pdf->SetTextColor($headerTextColor[0], $headerTextColor[1], $headerTextColor[2]);
$pdf->SetDrawColor($borderColor[0], $borderColor[1], $borderColor[2]);

// Column widths (adjusted for landscape)
$colWidths = [40, 30, 25, 100, 45, 30];

// Table headers
$pdf->Cell($colWidths[0], 10, 'User', 1, 0, 'C', true);
$pdf->Cell($colWidths[1], 10, 'Action', 1, 0, 'C', true);
$pdf->Cell($colWidths[2], 10, 'User Type', 1, 0, 'C', true);
$pdf->Cell($colWidths[3], 10, 'Description', 1, 0, 'C', true);
$pdf->Cell($colWidths[4], 10, 'Timestamp', 1, 0, 'C', true);
$pdf->Cell($colWidths[5], 10, 'IP Address', 1, 1, 'C', true);

// Reset text color for table content
$pdf->SetTextColor(44, 62, 80);
$pdf->SetFont('helvetica', '', 9);

// Counter for row coloring
$fill = false;

// Loop through records and add to table
foreach ($auditLogs as $log) {
    // Set the background color for alternating rows
    if ($fill) {
        $pdf->SetFillColor($alternateRowColor[0], $alternateRowColor[1], $alternateRowColor[2]);
    } else {
        $pdf->SetFillColor(255, 255, 255);
    }
    
    // Calculate row height based on description content
    $descriptionHeight = $pdf->getStringHeight($colWidths[3], $log['description']);
    $rowHeight = max(8, $descriptionHeight);
    
    // Save current position
    $x = $pdf->GetX();
    $y = $pdf->GetY();
    
    // Add styling to action text
    $action = $log['action'];
    
    // User name
    $pdf->Cell($colWidths[0], $rowHeight, htmlspecialchars($log['full_name']), 1, 0, 'L', $fill);
    
    // Action with colored text
    $pdf->Cell($colWidths[1], $rowHeight, $action, 1, 0, 'C', $fill);
    
    // User type
    $pdf->Cell($colWidths[2], $rowHeight, htmlspecialchars($log['usertype']), 1, 0, 'C', $fill);
    
    // Description (using MultiCell for text wrapping)
    $pdf->SetXY($x + $colWidths[0] + $colWidths[1] + $colWidths[2], $y);
    $pdf->MultiCell($colWidths[3], $rowHeight, htmlspecialchars($log['description']), 1, 'L', $fill);
    
    // Move to position after description
    $pdf->SetXY($x + $colWidths[0] + $colWidths[1] + $colWidths[2] + $colWidths[3], $y);
    
    // Timestamp
    $pdf->Cell($colWidths[4], $rowHeight, htmlspecialchars($log['created_at']), 1, 0, 'C', $fill);
    
    // IP Address
    $pdf->Cell($colWidths[5], $rowHeight, htmlspecialchars($log['ip_address']), 1, 1, 'C', $fill);
    
    // Reset position for next row
    $pdf->SetXY($x, $y + $rowHeight);
    
    // Toggle fill for next row
    $fill = !$fill;
    
    // Check if we need a page break for the next row
    if ($pdf->GetY() > $pdf->getPageHeight() - 20) {
        $pdf->AddPage();
        
        // Repeat header on new page
        $pdf->SetFont('helvetica', 'B', 10);
        $pdf->SetFillColor($headerBgColor[0], $headerBgColor[1], $headerBgColor[2]);
        $pdf->SetTextColor($headerTextColor[0], $headerTextColor[1], $headerTextColor[2]);
        
        $pdf->Cell($colWidths[0], 10, 'User', 1, 0, 'C', true);
        $pdf->Cell($colWidths[1], 10, 'Action', 1, 0, 'C', true);
        $pdf->Cell($colWidths[2], 10, 'User Type', 1, 0, 'C', true);
        $pdf->Cell($colWidths[3], 10, 'Description', 1, 0, 'C', true);
        $pdf->Cell($colWidths[4], 10, 'Timestamp', 1, 0, 'C', true);
        $pdf->Cell($colWidths[5], 10, 'IP Address', 1, 1, 'C', true);
        
        $pdf->SetTextColor(44, 62, 80);
        $pdf->SetFont('helvetica', '', 9);
    }
}

// Add footer with page numbers
$pdf->SetY(-15);
$pdf->SetFont('helvetica', 'I', 8);
$pdf->Cell(0, 10, 'Page ' . $pdf->getAliasNumPage() . ' of ' . $pdf->getAliasNbPages(), 0, 0, 'C');

// Output the PDF
ob_end_clean();
$pdf->Output('audit_logs_report.pdf', 'I');
?>